# ;; -*- mode: shell-script; -*-

[[ -x /usr/sbin/ntpdate ]] && alias timeset='sudo ntpdate -u -b pool.ntp.org'

function duf {
	du -sk "$@" |\
		sort -n |\
		while read size fname; do
			for unit in k M G T P E Z Y; do
				if [ $size -lt 1024 ]; then
					echo -e "${size}${unit}\t${fname}"
					break
				fi
				size=$((size/1024))
			done
		done
}

cdmkdir () {
	## create a new directory and cd into it
	mkdir -p "${1}" && \
	cd "${1}"
}

cdtemp () {
	cd $(mktemp -d temp.XXXXX || exit $?)
}

[[ ! -x $(whence -p pyenv) ]] && \
    [[ -x $(whence -p python2) ]] && \
    alias python='python2'
[[ -x $HOME/.spark/spark ]] && alias spark='$HOME/.spark/spark'
[[ -x $(whence rdesktop) ]] && alias rdesktop='rdesktop -r clipboard:PRIMARYCLIPBOARD'

# System specific aliases.
[ -f $ZDOTDIR/`uname -s`/aliases ] && source $ZDOTDIR/`uname -s`/aliases

alias cockroach='docker exec -i apx-metrics_crdb_1 /cockroach/cockroach'

alias fluent-local-logs='tail -f $(find /var/log/td-agent -type f -not -iname "*.log" -mtime -2d) | cut -d"	" -f3-'

function f_vpn () {
    WIRELESS_INTERFACE=en0
    TUNNEL_INTERFACE=ppp0
    GATEWAY=$(netstat -nrf inet | grep default | grep $WIRELESS_INTERFACE | awk '{print $2}')
    echo "Resetting routes with gateway => $GATEWAY"
    echo
    sudo route -n delete default -ifscope $WIRELESS_INTERFACE
    sudo route -n delete -net default -interface $TUNNEL_INTERFACE
    sudo route -n add -net default $GATEWAY
    for subnet in 10.0 10.1 10.2 10.199
    do
        sudo route -n add -net $subnet -interface $TUNNEL_INTERFACE
    done
}

function git_stash_backup() {
    awk '{ stashes[NR] = $2 } END {for (idx in stashes) { print "+" stashes[idx] ":refs/stash_backup/" ENVIRON["USER"] "/stash" (NR-idx) }}' .git/logs/refs/stash |\
        xargs git push origin \
              +$(cat .git/logs/refs/stash | git hash-object --stdin -w):refs/stash_backup/$USER/stash_reflog
}

function git_stash_restore() {
    git fetch origin "+refs/stash_backup/$USER/*:refs/stash_backup/$USER/*" &&\
        git cat-file -p refs/stash_backup/$USER/stash_reflog > .git/logs/refs/stash &&\
        git rev-parse refs/stash_backup/$USER/stash0 > .git/refs/stash
}

function git_stash_backup_clear () {
    git ls-remote origin "refs/stash_backup/$USER/*" |\
        awk '{print ":" $2}' |\
        xargs git push origin
}

# vim: ft=zsh et
